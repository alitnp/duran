import Layout from 'components/Layout/Layout';
import Head from 'next/head';
import { FaSortAmountDownAlt } from 'react-icons/fa';
import { IoIosArrowDown } from 'react-icons/io';
import ProductCardRow from 'components/Global/ProductCard/ProductCard';
import ProductGrid from 'components/Global/ProductGrid/ProductGrid';
import FilterVertical from 'components/Results/FilterVertical';
import FilterHorizen from 'components/Results/FilterHorizental';
import { useRouter } from 'next/router';
import { useDispatch } from 'react-redux';
import { useEffect } from 'react';
import { getProductSearchResults } from 'redux/middlewares/result/getProductSearchResults';
import { useSelector } from 'react-redux';
import LoadingCover from 'components/UI/LoadingSpin/LoadingCover';
import DSelect from 'components/UI/DSelect/DSelect';
import DOption from 'components/UI/DOption/DOption';
import ResultsOrderBy from 'components/Results/ResultsOrderBy';

const Results = () => {
  //states
  const { loading, searchResults: shoes } = useSelector(
    (state) => state.result
  );

  //hooks
  const { query } = useRouter();
  const dispatch = useDispatch();

  //effects
  useEffect(() => {
    dispatch(getProductSearchResults(query));
  }, [query]);

  return (
    <>
      <Head>
        <title>Duran Shop</title>
        <meta name='description' content='Generated by create next app' />
      </Head>
      <Layout>
        <div className='flex mt-6 mb-10' style={{ minHeight: '80vh' }}>
          <FilterVertical />
          <div className='w-full mx-auto'>
            <FilterHorizen />
            <div className='flex items-center justify-between w-full mb-2 border-b'>
              <p className='mb-0'>{shoes?.Products?.length} محصول</p>

              <ResultsOrderBy
                options={shoes?.PagingFilteringContext?.AvailableSortOptions}
              />
            </div>
            <ProductGrid>
              {shoes?.Products.map((item, index) => {
                return (
                  <div className='w-full '>
                    <ProductCardRow key={index} info={item} />
                  </div>
                );
              })}
            </ProductGrid>
          </div>
        </div>
      </Layout>
      {loading && <LoadingCover />}
    </>
  );
};

export default Results;
